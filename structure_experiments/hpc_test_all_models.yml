# Example of a plan
#--plan simmodel_new_allmodels.yml
---
version: 1.0
plans:
  - plan_1:
      name: test_all_models
      data:
        - data_test:
            name: true_data
            file: ../complex_stylized_supply_chain_model_generator/data/20231208_FINAL_ComplexSimModelGraph_GT_CNHK_USA_EventTimeSeries_ManufacturingTime1.5_Runtime364.csv
            columns_included:
            columns_excluded:
      transformations:
        - transform_1:
            name: load_decision_variables
            in: true_data
            steps:
              - step:
                  method: load_pickle
                  args:
                    - file_pkl: ../complex_stylized_supply_chain_model_generator/data/location_model_hpc_10_cnhk_usa_airsea_betweenness.pkl
            out: dec_var
        - transform_2:
            name: load_network_topology_ground_truth
            in: true_data
            steps:
              - step:
                  method: load_pickle
                  args:
                    - file_pkl: ../complex_stylized_supply_chain_model_generator/data/Ground_Truth_Graph_Topology_DF_CNHK_USA.pkl
            out: gt_topology
        - transform_3:
            name: transform_data
            in: true_data
            steps:
#              - step:
#                  method: noise_sampler
#                  args:
#                    - percentage: 0.1
#                    - columns_to_transform: ["quantity"]
#                    - seed: 2
#              - step:
#                  method: bias_sampler
#                  args:
#                    - percentage: 0.5
#                    - columns_to_transform: ["quantity"]
#                    - seed: 2
              - step:
                  method: missing_values_sampler
                  args:
                    - percentage: 0.8
                    - columns_to_transform: ["quantity"]
                    - seed: 2
              - step:
                  method: post_aggregation
                  args:
            out: data_transformed
      calibrations_global_parameters:
        models:
          - decision_variables: dec_var
          - ground_truth_topology: gt_topology
          - decision_variables_names: ["graph_structure"]
          - epsilons: [ 1 ] #ga
          - population_size: 5 #ga
          - nfe: 20 #ga/powell #only use for ga
          - n_iterations: 20 #powell/bo #only use for powell
          - n_draws: 20 #abc
          - convergence_progress: True #abc
          - initial_points: 10 #bo
          - num_pool: 2 #ga/bo
          - seed: 1
      calibrations_models:
        - calibration_1:
            name: ga_0
            interactive: True
            in: data_transformed
            evaluation_steps: 1
            model:
              method: genetic_algorithm
              params:
                - algorithm: "epsNSGAII"
              difference_functions:
                - difference_function_1:
                  - name: 'manhattan_metrics'
                  - method: 'manhattan_metrics'
        - calibration_2:
            name: abc_0
            interactive: True
            in: data_transformed
            evaluation_steps: 1
            model:
              method: approximate_bayesian_computation
              params:
                - algorithm: "pydream"
                - n_chains: 3
              difference_functions:
                - difference_function_1:
                  - name: 'manhattan_metrics'
                  - method: 'manhattan_metrics'
        - calibration_3:
            name: powell_0
            interactive: True
            in: data_transformed
            evaluation_steps: 1
            model:
              method: powell_method
              params:
                - nfe: 10
              difference_functions:
                - difference_function_1:
                  - name: 'manhattan_metrics'
                  - method: 'manhattan_metrics'
        - calibration_1:
            name: bo_0
            interactive: True
            in: data_transformed
            evaluation_steps: 1
            model:
              method: bayesian_optimization
              params:
                - n_iterations: 10
                - exploration_strategy: "ei"
              difference_functions:
                - difference_function_1:
                  - name: 'manhattan_metrics'
                  - method: 'manhattan_metrics'
      model_comparison:
        sorting_order_priority:
          # See available options below, first mention string columns!
          - Model Name
          - Dataframe
          - Score
#          - Model Name
#          - Duration
        sorting_direction: DESC # ASC of DESC, required if sorting order priority
